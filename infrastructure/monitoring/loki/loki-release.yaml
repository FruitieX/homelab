apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: loki
  namespace: loki
spec:
  interval: 99999h
  timeout: 5m
  chart:
    spec:
      chart: loki
      version: "*"
      sourceRef:
        kind: HelmRepository
        name: grafana
        namespace: flux-system
  values:
    deploymentMode: SingleBinary
    singleBinary:
      replicas: 1
      persistence:
        enabled: true
        size: 50Gi
        storageClass: nfs-csi

    # Zero out replica counts of other deployment modes
    backend:
      replicas: 0
    read:
      replicas: 0
    write:
      replicas: 0
    ingester:
      replicas: 0
    querier:
      replicas: 0
    queryFrontend:
      replicas: 0
    queryScheduler:
      replicas: 0
    distributor:
      replicas: 0
    compactor:
      replicas: 0
    indexGateway:
      replicas: 0
    bloomCompactor:
      replicas: 0
    bloomGateway:
      replicas: 0

    # Loki configuration
    loki:
      commonConfig:
        replication_factor: 1
      auth_enabled: false
      storage:
        type: filesystem
        bucketNames:
          chunks: loki-chunks
          ruler: loki-ruler
          admin: loki-admin
      storage_config:
        boltdb_shipper:
          active_index_directory: /var/loki/index
          cache_location: /var/loki/cache
        filesystem:
          directory: /var/loki/chunks
      pattern_ingester:
        enabled: true
      schemaConfig:
        configs:
          - from: "2024-01-01"
            store: boltdb-shipper
            object_store: filesystem
            schema: v13
            index:
              prefix: loki_index_
              period: 24h
      compactor:
        retention_enabled: true
        # Required when retention is enabled; use filesystem since object_store is filesystem
        delete_request_store: filesystem
      limits_config:
        retention_period: 90d
        # Structured metadata requires TSDB index; disable for boltdb-shipper schema
        allow_structured_metadata: false
    monitoring:
      dashboards:
        enabled: true
      rules:
        enabled: true
      serviceMonitor:
        enabled: true
        labels:
          release: kube-prometheus-stack

    # Reduce memcached chunks-cache footprint to fit worker capacity
    chunksCache:
      enabled: true
      replicas: 1
      allocatedMemory: 128
